---
- hosts: localhost
  gather_facts: yes
  gather_subset: [network]
  vars:
    helloworld: Hell, world!

    yaml_data:
      - 1
      - 2
      - key1: 2
        key2: true
        key4: null
        key5: ["hoge", null, 1, false]


  roles:
    - { role: role1, debugmsg: "def" }
    - role: role1
      debugmsg: "eeeeeeee"

    - role: role1
      vars:
        debugmsg: "insidevars"

    - role: role1
      vars:
        debugmsg: "insidevars_whenno"
      when: no

  tasks:
    - name: Print hello world
      debug: msg="{{ helloworld }}"

    - name: Print hello world with var option
      debug: var=helloworld

    - name: Print ansible_hostname
      debug: var=ansible_hostname

    - name: debug lastone
      debug:
        var: lastone
      vars:
        lastone: "{{ 'hogehoge' | lastone }}"


    - name: debug host_var1
      debug:
        var: host_var1

    - name: debug host_var2
      debug:
        var: host_var2

    - name: debug idx
      debug:
        var: idx
      vars:
        idx: "{{ 'hoehoe' | idx(3) }}"


    - name: Try timetest.py
      timetest.py:

    - name: Try alwaysfail.py
      alwaysfail.py: arg1="{{ helloworld }}"
      ignore_errors: true

    - name: Install libselinux
      yum: name=libselinux-python state=present
      become: yes
      when: ansible_hostname == "vagr-centos66"

    - name: Disable SELinux
      selinux: state=disabled
      become: yes
      when: ansible_hostname == "vagr-centos66"

    - name: encryption_test
      debug:
        msg: "{{ decrypted_message }}"
      vars:
        # Hide this for production!
        encrypt_key: secret_key
        decrypted_message: "{{ 'gAAAAABYy4KB8lRgVJXCTHQORp5U1cgKWk2DnhQvMRohee77-JpzKRSPQSxwn_AJe5Ts7ECgWq6O08JA0cHMBhxzLN1eSLcwRg==' | decrypt(encrypt_key) }}"

    - name: yaml_file test
      yaml_file:
        path: /tmp/j_ansible_yaml_file_test.yaml
        data: "{{ yaml_data }}"
      # Fail because yaml package not found
      ignore_errors: true

    - name: "add and remove file: add"
      lineinfile:
        dest: /tmp/__j_ansible.txt
        line: abc
        create: yes

    - name: "add and remove file: remove"
      file:
        dest: /tmp/__j_ansible.txt
        state: absent

    - name: Blockinfile test
      blockinfile:
        path: ./a.txt
        create: yes
        block: |
          hoe
          {% for e in list %}
          e: {{ e }}
          {% endfor %}
          fue
      vars:
        list: [1, 2, 5, 4]

    - name: ansible_processor_cores test
      debug:
        msg: "Can compare str with num!"
      # Not work with ansible2.5
      when: ansible_processor_cores >= 2
      ignore_errors: true

    - name: Test template
      template:
        src: ./b.txt.j2
        dest: b.txt
      vars:
        hoe: yes

    - name: debug unexist group
      debug:
        var: groups["hoe"]

    # - name: test in
    #   assert:
    #     that:
    #       - ansible_hotname in groups["hoe"]

    - name: Test default
      debug:
        msg: "{{ unexistent | default(null) }}"
      ignore_errors: yes

    - name: Test default
      debug:
        msg: "{{ unexistent | default(None) }}"

    - name: Test null
      debug:
        msg: null


    - name: Multiline stdin command test
      command: awk '{ print $1, $3 }'
      args:
        stdin: |
          abc def ghi
          hoe fue hie
          1 2 3

    - name: when test
      debug:
        msg: aaa
      when: "s.find(a|string) == -1"
      vars:
        s: "hoe"
        a: 1
